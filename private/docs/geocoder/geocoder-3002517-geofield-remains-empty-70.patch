diff --git a/geocoder.widget.inc
index 9e350a6..e5ef73b 100644
--- a/geocoder.widget.inc
+++ b/geocoder.widget.inc
@@ -200,7 +200,7 @@ function geocoder_field_widget_form(&$form, &$form_state, $field, $instance, $la
     // values is to perform a geocode and compare with the existing values.
     $geocoded_value = geocoder_widget_get_field_value($instance['entity_type'], $instance, $form['#entity']);
     $override_default = FALSE;
-    if ($geocoded_value &&
+    if ($geocoded_value && isset($element['lat']['#default_value']) && isset($element['lon']['#default_value']) &&
       (round($element['lat']['#default_value'], 3) != round($geocoded_value[$element['#language']][$delta]['lat'], 3)
         || round($element['lon']['#default_value'], 3) != round($geocoded_value[$element['#language']][$delta]['lon'], 3))
     ) {
@@ -265,12 +265,12 @@ function geocoder_field_attach_load($entity_type, $entities, $age, $options) {
   foreach ($entities as &$entity) {
     list(, , $bundle) = entity_extract_ids($entity_type, $entity);
     // Examine every geocoder field instance attached to this entity's bundle.
-    $instances = array_intersect_key(field_info_instances($entity_type, $bundle), field_read_fields(array('type' => 'geofield')));
+    $instances = field_info_instances($entity_type, $bundle);
     foreach ($instances as $field_name => $instance) {
       if ($instance['widget']['type'] === 'geocoder'
         && !empty($instance['widget']['settings']['latlng_override'])
-        && !empty($entity->{$field_name})
         && ($geocoded_value = geocoder_widget_get_field_value($entity_type, $instance, $entity))) {
+	        
         foreach ($entity->{$field_name} as $langcode => $items) {
           foreach ($items as $delta => $item) {
             if ((round($item['lat'], 3) != round($geocoded_value[$langcode][$delta]['lat'], 3)
@@ -293,27 +293,35 @@ function geocoder_field_attach_load($entity_type, $entities, $age, $options) {
  */
 function geocoder_field_attach_presave($entity_type, $entity) {
   list(, , $bundle) = entity_extract_ids($entity_type, $entity);
-  $instances = array_intersect_key(field_info_instances($entity_type, $bundle), field_read_fields(array('type' => 'geofield')));
+  $instances = field_info_instances($entity_type, $bundle);
   // Loop over any geofield using our geocode widget
   foreach ($instances as $field_name => $instance) {
     if ($instance['widget']['type'] === 'geocoder'
-      && !empty($entity->{$field_name})
       && ($geocoded_value = geocoder_widget_get_field_value($entity_type, $instance, $entity))) {
-      foreach ($entity->{$field_name} as $langcode => $items) {
-        if (empty($items)) {
-          $entity->{$field_name} = $geocoded_value;
-          break;
-        }
-        foreach ($items as $delta => $item) {
-          // Check the entity value.
-          if (!(isset($entity->geocoder_overridden)
-            && isset($entity->geocoder_overridden[$field_name])
-            && isset($entity->geocoder_overridden[$field_name][$langcode])
-            && !empty($entity->geocoder_overridden[$field_name][$langcode][$delta]))) {
-            $entity->{$field_name}[$langcode][$delta] = $geocoded_value[$langcode][$delta];
+
+      // If geofield is empty, it probably means that we chose
+      // 'Geocode from another field' widget. So we put geocoded value into
+      // this field.
+      if (!empty($entity->{$field_name})) {
+        foreach ($entity->{$field_name} as $langcode => $items) {
+          if (empty($items)) {
+            $entity->{$field_name} = $geocoded_value;
+            break;
+          }
+          foreach ($items as $delta => $item) {
+            // Check the entity value.
+            if (!(isset($entity->geocoder_overridden)
+              && isset($entity->geocoder_overridden[$field_name])
+              && isset($entity->geocoder_overridden[$field_name][$langcode])
+              && !empty($entity->geocoder_overridden[$field_name][$langcode][$delta]))) {
+              $entity->{$field_name}[$langcode][$delta] = $geocoded_value[$langcode][$delta];
+            }
           }
         }
       }
+      else {
+        $entity->{$field_name} = $geocoded_value;
+      }
     }
   }
 }
@@ -355,7 +363,8 @@ function geocoder_widget_get_entity_field_value($entity_type, $field_instance, $
   else if ($entity) {
     $wrapper = entity_metadata_wrapper($entity_type, $entity);
     $field_wrapper = $wrapper->value()->$field_name;
-    $value = $field_wrapper[LANGUAGE_NONE];
+    $langcode = field_language($entity_type, $entity, $field_name);
+    $value = $field_wrapper[$langcode];
     $values = array_filter(is_array($value) && isset($value[0]) ? $value : array($value));
     $source_field_values = array_map(function($value) {
       if (is_array($value)) {
