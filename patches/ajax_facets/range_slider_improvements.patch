diff --git a/misc/ajax_facets.js b/misc/ajax_facets.js
index 31b9a6f..d577df5 100755
--- a/misc/ajax_facets.js
+++ b/misc/ajax_facets.js
@@ -145,13 +145,25 @@
           if (settings.facetapi.facets[index].widget == 'facetapi_ajax_ranges') {
             $('#' + settings.facetapi.facets[index].id + '-wrapper div.slider-wrapper:not(.processed)').each(function () {
               var $sliderWrapper = $(this);
+              var $valueLabels = $sliderWrapper.parent().find('.range-slider__value-labels');
               $sliderWrapper.slider({
                 range: true,
                 min: parseFloat($sliderWrapper.data('min')),
                 max: parseFloat($sliderWrapper.data('max')),
                 values: [ parseFloat($sliderWrapper.data('min-val')), parseFloat($sliderWrapper.data('max-val')) ],
                 stop: function( event, ui ) {
-                  Drupal.ajax_facets.processSlider($sliderWrapper, ui.values[0], ui.values[1]);
+                  var min;
+                  var max;
+                  // If value labels are displayed, retrieve the taxonomy term ID from the label.
+                  if ($valueLabels.length) {
+                    min = $valueLabels.find('.value-labels__label[data-value="' + ui.values[0] + '"]').data('tid');
+                    max = $valueLabels.find('.value-labels__label[data-value="' + ui.values[1] + '"]').data('tid');
+                  }
+                  else {
+                    min = ui.values[0];
+                    max = ui.values[1];
+                  }
+                  Drupal.ajax_facets.processSlider($sliderWrapper, min, max, $valueLabels);
                 }
               }).addClass('processed');
 
@@ -165,7 +177,7 @@
                   if (isFinite(min) && isFinite(max) && min < max) {
                     $sliderWrapper.slider('values', 0, min);
                     $sliderWrapper.slider('values', 1, max);
-                    Drupal.ajax_facets.processSlider($sliderWrapper, min, max);
+                    Drupal.ajax_facets.processSlider($sliderWrapper, min, max, $valueLabels);
                   }
                 });
               });
@@ -384,7 +396,7 @@
   /**
    * Callback for slide event for widget ranges.
    */
-  Drupal.ajax_facets.processSlider = function($sliderWrapper, min, max) {
+  Drupal.ajax_facets.processSlider = function($sliderWrapper, min, max, $valueLabels) {
     var $this = $(this),
       facetName = $sliderWrapper.data('facet-name');
     // Init history.
@@ -393,7 +405,33 @@
     if (Drupal.ajax_facets.queryState['f']) {
       // Exclude all values for this facet from query.
       Drupal.ajax_facets.excludeCurrentFacet(facetName);
-      Drupal.ajax_facets.queryState['f'][Drupal.ajax_facets.queryState['f'].length] = facetName + ':[' + min + ' TO ' + max + ']';
+
+      // If value labels exist we can retrieve the term IDs to
+      // add to query. Term IDs are not always incremental so querying
+      // as a true range query does not make sense.
+      // @TODO: It would be ideal if we could still only pass one arg in the form
+      // of field_name:[term_id TO term_id]. Perhaps this isn't possible because
+      // this is not a true range query.
+      if ($valueLabels.length) {
+        var rangeStarted = false;
+        $valueLabels.find('.value-labels__label').each(function() {
+          var termID = $(this).data('tid');
+          if (termID == min) {
+            rangeStarted = true;
+          }
+
+          if (rangeStarted) {
+            Drupal.ajax_facets.queryState['f'][Drupal.ajax_facets.queryState['f'].length] = facetName + ':' + termID;
+          }
+
+          if (termID == max) {
+            rangeStarted = false;
+          }
+        });
+      }
+      else {
+        Drupal.ajax_facets.queryState['f'][Drupal.ajax_facets.queryState['f'].length] = facetName + ':[' + min + ' TO ' + max + ']';
+      }
     }
 
     Drupal.ajax_facets.sendAjaxQuery({
@@ -796,4 +834,4 @@
       }
     };
   }
-})(jQuery);
\ No newline at end of file
+})(jQuery);
diff --git a/plugins/facetapi/ajax_widget_ranges.inc b/plugins/facetapi/ajax_widget_ranges.inc
index d2679e4..b71e26a 100755
--- a/plugins/facetapi/ajax_widget_ranges.inc
+++ b/plugins/facetapi/ajax_widget_ranges.inc
@@ -70,60 +70,187 @@ class FacetapiAjaxWidgetRanges extends FacetapiAjaxWidget {
       'class' => ['slider-wrapper'],
     ];
 
-    // Get min and max values.
-    $raw_values = array_keys($element);
-    $raw_values = array_filter($raw_values, 'is_numeric');
+    $raw_values = [];
+    $terms = null;
+    // @TODO: This should be an admin option
+    // but only allowed if the field is a taxonomy term reference.
+    $display_value_labels = true;
+    $global_min = null;
+    $global_max = null;
+    $active_min_tid = null;
+    $active_max_tid = null;
+    $active_min_term_name = null;
+    $active_max_term_name = null;
 
-    // Check that we have values for the facet widget.
-    if (!empty($raw_values)) {
-      $global_min = min($raw_values);
-      $global_max = max($raw_values);
+    // If this is a taxonomy term reference field The order of the options
+    // should be determined by the order of the taxonomy terms
+    // at /admin/structure/taxonomy/*.
+    if ($this->build['#facet']['field type'] == 'taxonomy_term') {
+      $field = field_info_field($this->build['#facet']['field']);
+      $vocab_name = $field['settings']['allowed_values'][0]['vocabulary'];
+      $vocabulary = taxonomy_vocabulary_machine_name_load($vocab_name);
+      $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));
+
+      // Order terms by weight.
+      usort($terms, function ($term1, $term2) {
+        return $term1->weight > $term2->weight;
+      });
+      $terms = array_values($terms);
+
+      if (!empty($terms)) {
+        foreach ($terms as $term) {
+          $raw_values[] = $term->tid;
+        }
+      }
 
+      // Set global min and max based on first and last term.
+      // However, jQuery UI Slider requires values to be incremental,
+      // which term IDs are not usually. To get around this we set
+      // global min and max to incremental integers based on the total number of terms.
+      if (!empty($raw_values)) {
+        $global_min = 1;
+        $global_max = count($raw_values);
+
+        // Pass the global min and max term IDs to JS.
+        $slider_attrs['data-min-tid'] = $raw_values[0];
+        $slider_attrs['data-max-tid'] = end($raw_values);
+      }
+    }
+    // If field is not taxonomy term reference then we can determine
+    // global min and max based on field value.
+    else {
+      $raw_values = array_keys($element);
+      $raw_values = array_filter($raw_values, 'is_numeric');
+
+      // Check that we have values for the facet widget.
+      if (!empty($raw_values)) {
+        $global_min = min($raw_values);
+        $global_max = max($raw_values);
+      }
+    }
+
+    // Set global min and max values.
+    if (!empty($global_min)) {
       $slider_attrs['data-min'] = $global_min;
       $slider_attrs['data-max'] = $global_max;
+    }
 
+    // Check that we have values for the facet widget.
+    if (!empty($raw_values)) {
       // Get selected min and max for active value.
       if (!empty($items['active_value'])) {
-        $values = explode(' TO ', $items['active_value']);
-        $slider_attrs['data-min-val'] = preg_replace('/[^0-9\.]/', '', $values[0]);
-        $slider_attrs['data-max-val'] = preg_replace('/[^0-9\.]/', '', $values[1]);
+        // If field is taxonomy term reference.
+        if (!empty($terms)) {
+          // Retrieve all args for this facet from URL.
+          $selected_values = [];
+          if (!empty($_GET['f'])) {
+            foreach($_GET['f'] as $arg) {
+              if (strpos($arg, $field['field_name']) !== false) {
+                $exploded_value = explode($field['field_name'] . ':', $arg);
+                $selected_values[] = $exploded_value[1];
+              }
+            }
+          }
+          // Find min and max based on ordered list of term IDs.
+          $active_min_tid = $selected_values[0];
+          $active_max_tid = end($selected_values);
+          $active_min = array_search($active_min_tid, $raw_values) + 1;
+          $active_max = array_search($active_max_tid, $raw_values) + 1;
+
+          // Render the active min and max term IDs as HTML data attributes for clarity.
+          $slider_attrs['data-min-val-tid'] = $active_min_tid;
+          $slider_attrs['data-max-val-tid'] = $active_max_tid;
+
+          // Record active min and max term names to use as value of input fields.
+          foreach($terms as $term) {
+            if ($term->tid == $active_min_tid) {
+              $active_min_term_name = $term->name;
+            }
+            if ($term->tid == $active_max_tid) {
+              $active_max_term_name = $term->name;
+            }
+          }
+        }
+        else {
+          $values = explode(' TO ', $items['active_value']);
+          $active_min = preg_replace('/[^0-9\.]/', '', $values[0]);
+          $active_max = preg_replace('/[^0-9\.]/', '', $values[1]);
+        }
       }
-      // Get selected min and max by default.
+      // Get selected min and max to defaults.
       else {
-        $slider_attrs['data-min-val'] = $global_min;
-        $slider_attrs['data-max-val'] = $global_max;
+        $active_min = $global_min;
+        $active_max = $global_max;
       }
 
+      $slider_attrs['data-min-val'] = $active_min;
+      $slider_attrs['data-max-val'] = $active_max;
+
       // @todo move it into the other place?
       drupal_add_library('system', 'ui.slider');
 
-      $min_input = theme(
+      // Construct markup for min max input fields.
+      $input_field_markup = '<div class="range-slider__inputs">';
+
+      if (!empty($active_min_term_name)) {
+        $min_input_value = $active_min_term_name;
+      }
+      else {
+        $min_input_value = $slider_attrs['data-min-val'];
+      }
+
+      $input_field_markup .= theme(
         'ajax_facets_ranges_input',
         [
           'title' => t('From:'),
           'attributes' => ['class' => 'ajax-facets-slider-amount-min'],
-          'value' => $slider_attrs['data-min-val'],
+          'value' => $min_input_value,
         ]
       );
 
-      $max_input = theme(
+      if (!empty($active_max_term_name)) {
+        $max_input_value = $active_max_term_name;
+      }
+      else {
+        $max_input_value = $slider_attrs['data-max-val'];
+      }
+
+      $input_field_markup .= theme(
         'ajax_facets_ranges_input',
         [
           'title' => t('To:'),
           'attributes' => ['class' => 'ajax-facets-slider-amount-max'],
-          'value' => $slider_attrs['data-max-val'],
+          'value' => $max_input_value,
         ]
       );
 
+      $input_field_markup .= '</div>';
+
+      // If this is a taxonomy term reference field,
+      // construct markup to display taxonomy term names
+      // horizontally along range slider.
+      $values_markup = '';
+      if (!empty($terms)) {
+        $values_markup = '<div class="range-slider__value-labels">';
+
+        foreach ($terms as $key => $term) {
+          $value = $key + 1;
+          $values_markup .= '<span class="value-labels__label" data-tid="' . $term->tid . '" data-value="' . $value . '"><span class="label__text">' . $term->name . '</span></span>';
+        }
+
+        $values_markup .= '</div>';
+      }
+
       // We cannot use drupal_html_id to save the same id for each facet.
       $wrapper_id = $this->build['#attributes']['id'] . '-wrapper';
 
       $element = [
-        '#markup' => '<div id="' . $wrapper_id . '">'
+        '#markup' => '<div id="' . $wrapper_id . '" class="ajax-facets--range-slider">'
+          . '<label>' . $this->build['#title'] . '</label>'
           . $this->getResetLink()
           . '<div class="ajax-facets-controls-wrapper">'
-          . $min_input
-          . $max_input
+          . $input_field_markup
+          . $values_markup
           . '<div ' . drupal_attributes($slider_attrs) . '></div>'
           . '</div>'
           . '</div>'
